#변경해야 될 부분이 있습니다. ctrl+f로 "변경"을 찾아보세요.
name: Alert Deploy Status & Release Tag

on:
  pull_request:
    types: ['closed']

# job is triggered only when PR is closed and merged to the 'main' branch
jobs:
  prepare_alert_deploy_status:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: prepare for a slack-send environment
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: | 
            {
              "channel": "#team2_배포상태알림", "username": "Alert Manager", "text": "*===UPDATE ALARM===*", "icon_emoji": ":seal:"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          
  docker-ssh-deploy:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: seunghyeok/app:latest
      - 
        name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~
            docker-compose down
            docker image rm seunghyeok/app:latest
            docker-compose up -d
            echo hello7 >> hellofromgithub.txt

  alert_deploy_failed:
    if: ${{ failure() }} # 이전의 job이 실패했을 경우 실행됨
    needs: docker-ssh-deploy # docker job의 이름으로 변경해야됨
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: prepare to get github repo url
        run: |
          sudo apt install jq

      # Parse PR
      - name: get Pull Request Title
        id: pr_info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "pull_request_number=${{ github.event.number }}" >> $GITHUB_OUTPUT
          echo "pull_request_title=${{ github.event.pull_request.title }}" >> $GITHUB_OUTPUT

      - name: Failed to send a slack alarm
        shell: bash
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          GITHUB_REPO: ${{ toJson(github) }}
        run: |  
          GITHUB_REPO_URL_w=$(echo $GITHUB_REPO | jq '.repositoryUrl')
          # "와 git:// 삭제
          GITHUB_REPO_URL=$(echo "${GITHUB_REPO_URL_w:7:-1}")
          
          chmod +x tools/alertFailure.sh
          tools/alertFailure.sh "$SLACK_WEBHOOK_URL" ${GITHUB_REPO_URL} "${{ steps.pr_info.outputs.pull_request_title }}"

  alert_deploy_success:
    if: ${{ success() }} # 이전의 job이 성공했을 경우 실행됨
    runs-on: ubuntu-latest
    needs: docker-ssh-deploy # docker job의 이름으로 변경해야됨
    steps:
      - uses: actions/checkout@v3
      - name: prepare to get github repo url
        run: |
          sudo apt install jq

      # Parse PR
      - name: get Pull Request Title
        id: pr_info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "pull_request_number=${{ github.event.number }}" >> $GITHUB_OUTPUT
          echo "pull_request_title=${{ github.event.pull_request.title }}" >> $GITHUB_OUTPUT

      - name: Succeed to send a slack alarm
        shell: bash
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          GITHUB_REPO: ${{ toJson(github) }}
        run: |  
          GITHUB_REPO_URL_w=$(echo $GITHUB_REPO | jq '.repositoryUrl')
          # "와 git:// 삭제
          GITHUB_REPO_URL=$(echo "${GITHUB_REPO_URL_w:7:-1}")

          chmod +x tools/alertSuccess.sh
          tools/alertSuccess.sh "$SLACK_WEBHOOK_URL" ${GITHUB_REPO_URL} "${{ steps.pr_info.outputs.pull_request_title }}"
  
  ## below code is from .github/releaseAction.yml and modified
  ## name: Release Tag
  ## only runs when alert_deploy_success job is done
  build:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: alert_deploy_success
    if: ${{ success() }}
    steps:
      - uses: actions/checkout@v2
      - name: 버전 정보 추출
        id: extract_version_name 
        shell: bash  
        run: |
          VAR=$(echo '${{ github.event.pull_request.title }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')

          echo $VAR
          echo "version=${VAR}" >> $GITHUB_OUTPUT

      - name: Release 생성 
        uses: actions/create-release@v1
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          tag_name: "v${{ steps.extract_version_name.outputs.version }}" 
          release_name: "${{ steps.extract_version_name.outputs.version }}" 